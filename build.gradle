plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'io.mohajistudio'
version = '0.0.1-SNAPSHOT'
jar {
	enabled = false
}

test.onlyIf {
	!project.hasProperty('test')
}

java {
	sourceCompatibility = '17'
}

compileJava {
	options.compilerArgs += [
			'--enable-preview',
			'-Amapstruct.defaultComponentModel=spring'
	]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'

	implementation 'com.google.api-client:google-api-client:1.32.1'
	implementation 'com.google.code.gson:gson:2.10.1'

	// 이미지 리사이징 및 크롭
	implementation 'com.github.downgoon:marvin:1.5.5'
	implementation 'com.github.downgoon:MarvinPlugins:1.5.5'
	implementation 'org.imgscalr:imgscalr-lib:4.2'

	// 파일의 메타 데이터를 불러옴
	implementation 'com.drewnoakes:metadata-extractor:2.19.0'

	testImplementation 'org.projectlombok:lombok:1.18.28'
    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.hibernate:hibernate-spatial:6.4.1.Final'

//	implementation 'org.flywaydb:flyway-core:10.4.1'
//	implementation 'org.flywaydb:flyway-database-postgresql:10.4.1'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.1.0'

	implementation(platform("software.amazon.awssdk:bom:2.21.1"))
	implementation("software.amazon.awssdk:s3")

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}

compileTestJava {
	options.compilerArgs += [
			'--enable-preview',
			'-Amapstruct.defaultComponentModel=spring'
	]
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs([
			'--enable-preview',
			'-Amapstruct.defaultComponentModel=spring'
	])
}
